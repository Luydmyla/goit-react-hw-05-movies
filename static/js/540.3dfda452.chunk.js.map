{"version":3,"file":"static/js/540.3dfda452.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAiBC,GAC/B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQa,EADR,oBACyBZ,EADzB,+CAKxB,SAASa,EAAQC,GACtB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,oBAKxB,SAASe,EAAWD,GACzB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,2BAKxB,SAASgB,IACd,OAAOf,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASiB,EAAcH,GAE5B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,M,kHChC7B,SAASkB,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MACfC,QAAQC,IAAIH,GACZ,IAAQL,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkBb,GAASc,MAAK,SAAAvB,GAAQ,OAAIoB,EAAQpB,EAASmB,WAC5D,CAACV,IACJO,QAAQC,IAAIE,GAQZ,OACE,8BACGA,IACC,wBACGA,EAAKK,KAAI,SAAAC,GAAO,OACf,2BACE,gBACEC,IAAG,WAdEC,EAccF,EAAQE,aAblB,OAAjBA,EACK,6DAGH,kCAAN,OAAyCA,KAU7BC,IAAKH,EAAQI,QAEf,wBAAKJ,EAAQI,QACb,wCAAgBJ,EAAQK,eANjBL,EAAQM,IAZR,IAAAJ","sources":["services/movies-api.js","views/MovieCast/MovieCast.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b799de2e1359641dffd47460cedfbdc0';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\n\nexport default function MoviesCast() {\n  const params = useParams();\n  console.log(params);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    moviesAPI.getCast(movieId).then(response => setCast(response.cast));\n  }, [movieId]);\n  console.log(cast);\n  const viewPoster = profile_path => {\n    if (profile_path === null) {\n      return 'https://wipfilms.net/wp-content/data/posters/tt0338683.jpg';\n      // 'NO POSTER';\n    }\n    return `https://image.tmdb.org/t/p/w300${profile_path}`;\n  };\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map(castOne => (\n            <li key={castOne.id}>\n              <img\n                src={`${viewPoster(castOne.profile_path)}`}\n                alt={castOne.name}\n              />\n              <h3>{castOne.name}</h3>\n              <p> Character: {castOne.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById","MoviesCast","params","useParams","console","log","useState","cast","setCast","useEffect","moviesAPI","then","map","castOne","src","profile_path","alt","name","character","id"],"sourceRoot":""}