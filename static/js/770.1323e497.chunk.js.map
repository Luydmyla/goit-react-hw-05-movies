{"version":3,"file":"static/js/770.1323e497.chunk.js","mappings":"wMACaA,EAAeC,EAAAA,GAAAA,OAAH,mJAOZC,EAAYD,EAAAA,GAAAA,KAAH,uF,kBCFP,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,UAACL,EAAD,CAAcS,KAAK,SAASL,QAASA,EAArC,WAGE,SAAC,MAAD,CAAaM,KAAK,WAAWC,KAAK,OAHpC,KAG4C,SAACT,EAAD,4B,oLCb1CU,EAAW,+BACXC,EAAU,mCAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAiBC,GAC/B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQa,EADR,oBACyBZ,EADzB,+CAKxB,SAASa,EAAQC,GACtB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,oBAKxB,SAASe,EAAWD,GACzB,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,4BACqBd,EADrB,2BAKxB,SAASgB,IACd,OAAOf,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASiB,EAAcH,GAE5B,OAAOb,EAAuB,GAAD,OACxBF,EADwB,kBACNe,EADM,oBACad,M,yICnC/BkB,EAAa9B,EAAAA,GAAAA,GAAH,6DAIV+B,EAAS/B,EAAAA,GAAAA,EAAH,+GAMNgC,EAAkBhC,EAAAA,GAAAA,KAAH,8D,SCDb,SAASiC,IAGtB,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMjC,GAAWC,EAAAA,EAAAA,MASjB,OARAC,QAAQC,IAAIH,IACZkC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACcb,GACXc,MAAK,SAAAvB,GAAQ,OAAIoB,EAAWpB,EAASwB,cACvC,CAACf,IACJpB,QAAQC,IAAI6B,IAGV,iCACE,SAACM,EAAA,EAAD,CAAcvC,QAAS,kBAAMC,GAAU,MACtCgC,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,UAACf,EAAD,uBACU,UAACE,EAAD,eAAmBa,EAAOC,OAA1B,WAEV,SAACf,EAAD,UAASc,EAAOE,YAJTF,EAAOG,UASpB","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","services/movies-api.js","views/MoviesReviews/MoviesReviews.styled.js","views/MoviesReviews/MoviesReviews.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: lightyellow;\n  border-radius: 10%;\n`;\nexport const SpanLabel = styled.span`\n  margin-left: 10px;\n  color: darkblue;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport './Button.styled.js';\nimport { GoBackButton, SpanLabel } from './Button.styled';\nimport { ImArrowLeft } from 'react-icons/im';\n\nexport default function ButtonGoBack({ onClick }) {\n  const navigate = useNavigate();\n  console.log(navigate);\n  return (\n    <GoBackButton type=\"button\" onClick={onClick}>\n      {/* <GoBackButton type=\"button\" onClick={() => navigate('/')}> */}\n      {/* <GoBackButton type=\"button\" onClick={() => navigate(-1)}>  */}\n      <ImArrowLeft fill=\"darkblue\" size=\"32\" /> <SpanLabel> GO BACK</SpanLabel>\n    </GoBackButton>\n    //{' '}\n    // </GoBackButton>\n  );\n}\n\nButtonGoBack.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b799de2e1359641dffd47460cedfbdc0';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n","import styled from 'styled-components';\nexport const AuthorName = styled.h3`\n  color: red;\n  font-weight: bold;\n`;\nexport const Review = styled.p`\n  display: flex;\n  flex-direction: column;\n  color: darkblue;\n  font-weight: bold;\n`;\nexport const AuthorNameValue = styled.span`\n  color: blue;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ButtonGoBack from '../../components/Button';\nimport * as moviesAPI from '../../services/movies-api';\nimport {\n  AuthorName,\n  Review,\n  AuthorNameValue,\n} from '../MoviesReviews/MoviesReviews.styled';\n\nexport default function MoviesReviews() {\n  // const params = useParams();\n  // console.log(params);\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n  console.log(navigate);\n  useEffect(() => {\n    moviesAPI\n      .getReviews(movieId)\n      .then(response => setReviews(response.results));\n  }, [movieId]);\n  console.log(reviews);\n\n  return (\n    <>\n      <ButtonGoBack onClick={() => navigate(-1)} />\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <AuthorName>\n                Author: <AuthorNameValue> {review.author} </AuthorNameValue>\n              </AuthorName>\n              <Review>{review.content}</Review>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"names":["GoBackButton","styled","SpanLabel","ButtonGoBack","onClick","navigate","useNavigate","console","log","type","fill","size","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById","AuthorName","Review","AuthorNameValue","MoviesReviews","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","Button","length","map","review","author","content","id"],"sourceRoot":""}