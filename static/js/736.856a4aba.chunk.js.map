{"version":3,"file":"static/js/736.856a4aba.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","services/movies-api.js","views/MovieDetailsView/MovieDetailsView.jsx","views/MovieDetailsView/MovieDetailsView.styled.js"],"sourcesContent":["import styled from 'styled-components';\nexport const GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  background-color: lightyellow;\n  border-radius: 10%;\n`;\nexport const SpanLabel = styled.span`\n  margin-left: 10px;\n  color: darkblue;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport './Button.styled.js';\nimport { GoBackButton, SpanLabel } from './Button.styled';\nimport { ImArrowLeft } from 'react-icons/im';\n\nexport default function ButtonGoBack({ onClick }) {\n  const navigate = useNavigate();\n  console.log(navigate);\n  return (\n    <GoBackButton type=\"button\" onClick={onClick}>\n      {/* <GoBackButton type=\"button\" onClick={() => navigate('/')}> */}\n      {/* <GoBackButton type=\"button\" onClick={() => navigate(-1)}>  */}\n      <ImArrowLeft fill=\"darkblue\" size=\"32\" /> <SpanLabel> GO BACK</SpanLabel>\n    </GoBackButton>\n    //{' '}\n    // </GoBackButton>\n  );\n}\n\nButtonGoBack.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nexport const Title = styled.h1`\n  /* width: 300px; */\n  width: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n  margin-top: 0;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  color: #fff;\n  /* font-size: 40px; */\n  font-weight: 400;\n  text-align: center;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;\n","import { Title } from './PageHeading.styled.js';\n\nexport default function PageHeading({ text }) {\n  return <Title>{text}</Title>;\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b799de2e1359641dffd47460cedfbdc0';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport ButtonGoBack from '../../components/Button';\nimport * as movieAPI from '../../services/movies-api';\nimport styled from 'styled-components';\nimport {\n  CardMovie,\n  MovieInfo,\n  Horizontal,\n} from '../MovieDetailsView/MovieDetailsView.styled';\n// import { ImArrowLeft } from 'react-icons/im';\n\nconst Link = styled.div`\n  display: inline-block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 18px;\n`;\n\nexport default function MovieDetailsView() {\n  // щоб отримати айдішнік одного фільму викоритовуємо хук - юз парамс\n  // const params = useParams();\n  // console.log(params);\n  // повертає нам обєкт динамічних параметрів\n  //беремо диструктуризуємо з парамс фільмайді\n  const { movieId } = useParams();\n  // ми ще раз робимо хттп запит, тому що якщо користувач просто заходить по ссилці на сторінку одного фільму, то у нас не рендерилися попередні список фільмфі, де був запит на бекенд, і ніякої відповіді від бекенду немає.\n  // ще раз - це якщо користувач відразу ввів адресу одного фільму\n  // обявляємо стейт для одного фільму і роблю юзефект фетч по муві айді і потім записую це в сетмуві\n  const [movie, setMovie] = useState(null);\n  // console.log(movie);\n  const navigate = useNavigate();\n  console.log(navigate);\n  const location = useLocation;\n  console.log(location);\n\n  useEffect(() => {\n    movieAPI.getMoviesById(movieId).then(response => setMovie(response));\n  }, [movieId]);\n  // функція що перевіряє чи є постер до фільму\n  const viewPoster = poster_path => {\n    if (poster_path === null) {\n      return 'https://wipfilms.net/wp-content/data/posters/tt0338683.jpg';\n      // 'NO POSTER';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n  // функція для переводу оцінки користувача в %\n  const userScore = vote_average => {\n    return vote_average * 10 + '%';\n  };\n  // тут перебираємо масив із жанрами через кому і пробел\n  const allGenres = genres => {\n    if (genres === null) {\n      return;\n    }\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  return (\n    <>\n      {/* <ButtonGoBack /> */}\n      <Horizontal />\n      {/* тут використовуємо динамічний параметр взятий з юзпарамс */}\n      {/* якщо прийшда відповідь з бекенду(є фільми) ми можемо щось зарендерить, вибираємо з обєкта що нам потрібно (або це може бути окремий компонент типу карточка фільм кард) */}\n      {movie && (\n        <>\n          <ButtonGoBack onClick={() => navigate(-1)} />\n          <PageHeading text={`${movie.title}`} />\n          <Horizontal\n          // style={{\n          //   height: '12px',\n          //   border: '0',\n          //   boxShadow: 'inset 0 12px 12px -12px rgba(0,0,0,0.5)',\n          // }}\n          />\n          <CardMovie>\n            <img src={`${viewPoster(movie.poster_path)}`} alt={movie.title} />\n            <MovieInfo>\n              <h2> {movie.title} </h2>\n              <h3> Overview: </h3>\n              <p> {movie.overview} </p>\n              <p> User score: {`${userScore(movie.vote_average)}`} </p>\n              <h3> Genres: </h3>\n              <p>\n                {`${allGenres(movie.genres)}`}\n                {/* інший варіант через редьюс - перший аргумент функціі колбек, що приймає акк і текуще значення, \n                      і другий аргумент редьюса - пуста строчка, куди буде записуватись значення і між ними пробел */}\n                {/* {movie.genres.reduce(\n              (acc, currrent) => acc + ' ' + currrent.name,\n              ''\n            )} */}\n                {/* <Horizontal /> */}\n              </p>\n            </MovieInfo>\n          </CardMovie>\n          <Horizontal />\n          <h2> Additional information </h2>\n          <Link>\n            <NavLink to={`/movies/${movie.id}/cast`} className=\"Link\">\n              <PageHeading text=\"Cast\" />\n              {/* Cast */}\n            </NavLink>\n          </Link>\n\n          <Link>\n            <NavLink to={`/movies/${movie.id}/reviews`} className=\"Link\">\n              <PageHeading text=\"Reviews\" />\n              {/* Reviews */}\n            </NavLink>\n          </Link>\n          {/* тут будуть рендериться відповідні інфо без перезагрузки сторінки */}\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nexport const CardMovie = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  /* border-bottom: 1px solid #2a363b; */\n`;\nexport const MovieInfo = styled.div`\n  display: block;\n  margin-left: 20px;\n`;\nexport const Horizontal = styled.div`\n  height: 12px;\n  border: 0;\n  box-shadow: inset 0 12px 12px -12px rgba(0, 0, 0, 0.5);\n`;\n"],"names":["GoBackButton","styled","SpanLabel","ButtonGoBack","onClick","navigate","useNavigate","console","log","type","fill","size","Title","PageHeading","text","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById","Link","MovieDetailsView","useParams","useState","movie","setMovie","location","useLocation","useEffect","movieAPI","then","vote_average","poster_path","title","src","alt","overview","genres","map","genre","name","join","allGenres","to","id","className","CardMovie","MovieInfo","Horizontal"],"sourceRoot":""}